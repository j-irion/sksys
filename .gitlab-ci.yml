variables:
  RUST_MSRV: "1.70.0"
  CARGO_HOME: "$CI_PROJECT_DIR/.cache/cargo"
  RUSTC_WRAPPER: "sccache"
  SCCACHE_DIR: "$CI_PROJECT_DIR/.cache/sccache"

cache:
  paths:
    - .cache/cargo
    - .cache/sccache
    - node_modules/

stages:
  - .pre
  - format
  - build
  - lint
  - deploy

format-cargo-fmt:
  image: rust:$RUST_MSRV-alpine
  stage: format
  script:
    - rustup component add rustfmt
    - cargo fmt --check --all
  cache: []

format-prettier:
  image: node:latest
  stage: format
  script:
    - yarn --frozen-lockfile
    - yarn prettier --check .
  cache: []

build-aggregator:
  image: rust:$RUST_MSRV-alpine
  stage: build
  before_script:
    - apk add --no-cache sccache musl-dev openssl-dev
  script:
    - cargo build -p aggregator --locked
    - sccache --show-stats
    - du -hs .cache/ target/

build-ingester:
  image: rust:$RUST_MSRV-alpine
  stage: build
  before_script:
    - apk add --no-cache sccache musl-dev openssl-dev
  script:
    - cargo build -p ingester --locked
    - sccache --show-stats
    - du -hs .cache/ target/

build-client-frontend:
  image: node:latest
  stage: build
  script:
    - cd ./frontend/client
    - npm install
    - npm run build
    - du -hs node_modules/

build-admin-frontend:
  image: node:latest
  stage: build
  script:
    - cd ./frontend/admin
    - npm install
    - npm run build
    - du -hs node_modules/

check-aggregator:
  image: rust:$RUST_MSRV-alpine
  stage: lint
  before_script:
    - apk add --no-cache sccache musl-dev openssl-dev
  script:
    - rustup component add clippy
    - cargo clippy -p aggregator --locked
    - sccache --show-stats
    - du -hs .cache/ target/

check-ingester:
  image: rust:$RUST_MSRV-alpine
  stage: lint
  before_script:
    - apk add --no-cache sccache musl-dev openssl-dev
  script:
    - rustup component add clippy
    - cargo clippy -p ingester --locked
    - sccache --show-stats
    - du -hs .cache/ target/

validate-terraform 1/3:
  image: alpine
  stage: lint
  before_script:
    - apk add --no-cache terraform
  script:
    - terraform -chdir=infra/dev init
    - terraform -chdir=infra/dev validate
  cache: []

validate-terraform 2/3:
  image: alpine
  stage: lint
  before_script:
    - apk add --no-cache terraform
  script:
    - terraform -chdir=infra/prod/gce init
    - terraform -chdir=infra/prod/gce validate
  cache: []

validate-terraform 3/3:
  image: alpine
  stage: lint
  before_script:
    - apk add --no-cache terraform
  script:
    - terraform -chdir=infra/prod/docker init
    - terraform -chdir=infra/prod/docker validate
  cache: []

build-docker-aggregator:
  tags:
    - docker
  image: docker:23.0.6
  services:
    - docker:23.0.6-dind
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/r.oleynik/sksys/aggregator:latest
    - docker push $CI_REGISTRY/r.oleynik/sksys/aggregator:latest
